<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/lesson.css">
    <title>Lesson</title>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</head>
<body>
    <div class="container-fluid p-0">
        <div class="upper-side row no-gutters p-3" style="background-color: #E0F4F9;">
            <aside class="col-md-2 col-12 bg-sidebar section greeting-text font-weight-bold text-muted d-flex align-items-center position-relative">
                <span>Hello </span>
            
                <!-- Dropdown Menu Trigger (Settings Icon) -->
                <img src="/assets/settings-1.svg" alt="Settings" class="img-fluid settings-icon ml-2 dropdown-toggle" style="width: 30px; cursor: pointer;" onclick="toggleDropdownMenu()">
            
                <!-- Dropdown Menu Content -->
                <div class="dropdown-content position-absolute" id="dropdownMenu" style="display: none; top: 50px; right: 10px;">
                    <a href="/admin/homeAdmin">Go back</a>
                    <a href="/admin/lessonRoomArchive/<%= room._id %>">Lesson Room  Archive</a>
                    <a href="/admin/pdfAndVideoArchive/<%= room._id %>">Pdf and Video Archive</a>
                    <a href="/admin/activitiesArchive/<%= room._id %>">Actvitiy Archive</a>
                    <a href="/logout">Logout</a>
                </div>
            </aside>
            <main class="col-md-8 bg-main section">
                <select class="form-control mr-2">
                    <option value="">Select Level</option>
                    <script>
                        for (let i = 1; i <= 30; i++) {
                            document.write(`<option value="level${i}.html">Level ${i}</option>`);
                        }
                    </script>
                </select>
            </main>
            <div class="col-md-2 bg-right-side section">
                <select class="form-control">
                    <option value="">Select Week</option>
                    <script>
                        for (let i = 1; i <= 6; i++) {
                            document.write(`<option value="week${i}.html">Week ${i}</option>`);
                        }
                    </script>
                </select>
            </div>
        </div>

        <div class="containers row">
            <aside class="col-md-1 sidebar text-center p-3" style="height: 700px;">
                <nav>
                    <ul class="list-unstyled">
                        <li style="margin-bottom: 35px;">
                            <a href="/admin/dashboard/<%= room._id %>" class="text-dark">
                                <img src="/assets/homebut.png" alt="Home Button" style="width: 60px; height: 60px; display: block; margin: 0 auto;">
                                Dashboard
                            </a>
                        </li>
                        <li style="margin-bottom: 35px;">
                            <a href="/admin/lesson/<%= room._id %>" class="text-dark font-weight-bold" style="background-color: #FFDF9F; padding: 10px; border-radius: 5px;">
                                <img src="/assets/lessonbut.png" alt="Lesson Button" style="width: 60px; height: 60px; display: block; margin: 0 auto;">
                                Lesson
                            </a>
                        </li>
                        <li style="margin-bottom: 35px;">
                            <a href="/admin/activities/<%= room._id %>"  class="text-dark">
                                <img src="/assets/activitiesbut.png" alt="Activities Button" style="width: 70px; height: 70px; display: block; margin: 0 auto;">
                                Activities
                            </a>
                        </li>
                        <li style="margin-bottom: 35px;">
                            <a href="/admin/educGames/<%= room._id %>" class="text-dark">
                                <img src="/assets/educgamesbut.png" alt="Educational Games Button" style="width: 70px; height: 70px; display: block; margin: 0 auto;">
                                Educational Games
                            </a>
                        </li>
                    </ul>
                </nav>
            </aside>

            <main class="col-md-11">
                <div class="d-flex align-items-center mb-4">
                    <img src="/assets/grid.svg" alt="Grid" class="mr-2" style="width: 20px; height: 20px;">
                    <h4 class="font-weight-bold mb-0 text-dark">Lesson</h4>
                </div>
                <!-- Display existing lesson rooms dynamically -->
                <div id="lessonRoomList" class="mb-4">
                    <h5>Existing Lesson Rooms</h5>
                    <ul class="list-group d-flex flex-row flex-wrap">
                        <% 
                        const buttonColors = ["color-1", "color-2", "color-3", "color-4"];
                        const imgSources = [
                            "/assets/english-4.svg",
                            "/assets/layer-1.svg",
                            "/assets/geography-1.svg",
                            "/assets/socio-1.svg"
                        ];
                    
                        lessonRooms.forEach(function(lessonRoom, index) { 
                            const colorClass = buttonColors[index % buttonColors.length];
                            const imgSrc = imgSources[index % imgSources.length];
                        %>
                        
                        <li class="list-group-item lesson-room d-flex align-items-center mr-2 clickable <%= colorClass %>" 
                            data-room-id="<%= lessonRoom._id %>">
                            
                            <div class="d-flex align-items-center justify-content-between w-100">
                                <div class="lesson-details">
                                    <strong class="mr-2"><%= lessonRoom.subject %></strong> <%= lessonRoom.topic %>
                                    <img src="<%= imgSrc %>" alt="<%= lessonRoom.subject %> Icon" class="ml-2" style="width: 40px;">
                                </div>
                
                                <!-- Kebab Menu Icon and Dropdown for Archiving -->
                                <div class="kebab-menu" onclick="event.stopPropagation(); toggleMenu('<%= lessonRoom._id %>');">
                                    &#x22EE;
                                </div>
                
                                <!-- Dropdown Menu for each room -->
                                <div class="dropdown-menu" id="menu-<%= lessonRoom._id %>" style="display: none;">
                                    <a href="#" onclick="archiveLessonRoom('<%= lessonRoom._id %>'); event.stopPropagation();">Archive</a>
                                </div>
                            </div>
                        </li>
                        <% }); %>
                    </ul>
                </div>

                <!-- New big box section -->
<div class="newbigbox" style="display: none;"> <!-- Initially hidden -->
    <div class="d-flex justify-content-center mt-3">
        <button id="moduleButton" class="btn custom-btn">Module</button>
        <button id="videoButton" class="btn custom-btn">Video</button>
    </div>
</div>

<!-- Hidden content section for PDF and Video uploads -->
<div id="lessonRoomContent" class="big-box" style="display: none;">
    <div class="content-wrapper">
        
        <!-- Module (PDF Upload and Modal) Section -->
        <div id="uploadPdfSection" class="left-content" style="display: none;">
            <h5 class="text-dark">Upload PDF</h5>
            <form id="uploadPdfForm" action="/admin/upload-pdf/<%= room._id %>" method="POST" enctype="multipart/form-data">
                <input type="hidden" name="roomId" id="pdfRoomId" value="">
                <div class="form-group">
                    <label for="pdfFile">Choose PDF file:</label>
                    <input type="file" name="pdfFile" class="form-control-file" id="pdfFile" accept=".pdf" required>
                </div>
                <button type="submit" class="btn btn-primary">Upload PDF</button>
            </form>
            
            <div class="lesson-content">
                <h3>Uploaded PDFs</h3>
                <ul id="uploadedPdfs"></ul>
            </div>

            <!-- PDF Preview Modal -->
            <div id="pdfModal" class="modal" style="display: none;">
                <div class="modal-content">
                    <span class="close" onclick="closePdfModal()">&times;</span>
                    <iframe id="pdfViewer" src="" width="100%" height="100%"></iframe>
                </div>
                <div class="arrow-box-container">
                    <a href="/admin/activities/<%= room._id %>" class="arrow-text">Would you like to take a Quiz?</a>
                </div>
            </div>
        </div>

        <!-- Video (Upload Video) Section -->
        <div id="uploadVideoSection" class="right-content" style="display: none;">
            <h5 class="text-dark">Upload Video</h5>
            <form id="uploadVideoForm" action="" method="POST" enctype="multipart/form-data">
                <input type="hidden" name="roomId" id="videoRoomId" value="">
                <div class="form-group">
                    <label for="videoFile">Choose MP4 video:</label>
                    <input type="file" name="videoFile" class="form-control-file" id="videoFile" accept=".mp4" required>
                </div>
                <button type="submit" class="btn btn-primary">Upload Video</button>
            </form>
            
            <div class="lesson-content">
                <h3>Uploaded Videos</h3>
                <ul id="uploadedVideos"></ul>
            </div>
        </div>
    </div>
</div>

                 <!-- Lesson Room Creation Form -->
                 <div class="layered-container">
                    <div class="background-image">
                        <div class="form-overlay">
                            <h5>Create a New Lesson Room</h5>
                            <form id="createLessonRoomForm" action="/admin/create-lesson-room/<%= room._id %>" method="POST">
                                <div class="form-group">
                                    <label for="subject">Subject</label>
                                    <input type="text" class="form-control" id="subject" name="subject" placeholder="Enter subject" required>
                                </div>
                                <div class="form-group">
                                    <label for="topic">Topic</label>
                                    <input type="text" class="form-control" id="topic" name="topic" placeholder="Enter topic" required>
                                </div>
                                <button type="submit" class="btn btn-primary">Create Room</button>
                            </form>
                        </div>
                    </div>
                </div>
            </main>
        </div>


        <script>
            // Set global roomId and userId variables for all functions to use
            const roomId = '<%= room._id %>';
            const userId = '<%= currentUser._id %>';
        
            // Function to toggle the PDF kebab menu display
            function togglePdfMenu(pdfFileId) {
                const menu = document.getElementById(`pdfMenu-${pdfFileId}`);
                document.querySelectorAll('.dropdown-menu').forEach((dropdown) => {
                    if (dropdown !== menu) dropdown.style.display = 'none';
                });
                menu.style.display = menu.style.display === 'block' ? 'none' : 'block';
            }
        
            // Function to toggle the video kebab menu display
            function toggleVideoMenu(videoFileId) {
                const menu = document.getElementById(`videoMenu-${videoFileId}`);
                document.querySelectorAll('.dropdown-menu').forEach(dropdown => {
                    if (dropdown !== menu) dropdown.style.display = 'none';
                });
                menu.style.display = menu.style.display === 'block' ? 'none' : 'block';
            }
        
            // Archive function for a video
            function archiveVideo(videoFileId) {
                fetch(`/admin/archive-video/${videoFileId}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                })
                .then(response => {
                    if (response.ok) {
                        alert('Video archived successfully.');
                        document.getElementById(`videoMenu-${videoFileId}`).style.display = 'none';
                        loadLessonFiles(roomId, userId); // Refresh list
                    } else {
                        throw new Error('Failed to archive video');
                    }
                })
                .catch(error => console.error('Error archiving video:', error));
            }
        
            // Close dropdowns if clicked outside
            document.addEventListener('click', function(event) {
                const isKebab = event.target.classList.contains('kebab-menu');
                const isDropdownItem = event.target.closest('.dropdown-menu');
                if (!isKebab && !isDropdownItem) {
                    document.querySelectorAll('.dropdown-menu').forEach(menu => {
                        menu.style.display = 'none';
                    });
                }
            });
        
            // Archive function to send an AJAX request for archiving a PDF
            function archivePdf(pdfFileId) {
                fetch(`/admin/archive-pdf/${pdfFileId}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                })
                .then(response => {
                    if (response.ok) {
                        alert('PDF archived successfully.');
                        document.getElementById(`pdfMenu-${pdfFileId}`).style.display = 'none';
                        loadLessonFiles(roomId, userId); // Reload list to reflect archived PDF
                    } else {
                        alert('Failed to archive PDF.');
                    }
                })
                .catch(error => console.error('Error archiving PDF:', error));
            }
        
async function loadLessonFiles(roomId, userId) {
    const pdfList = document.getElementById('uploadedPdfs');
    const videoList = document.getElementById('uploadedVideos');
    pdfList.innerHTML = ''; // Clear previous PDFs
    videoList.innerHTML = ''; // Clear previous Videos

    try {
        const response = await fetch(`/admin/get-lessons/${roomId}`);
        const lessonData = await response.json();
        console.log('Filtered lesson data:', lessonData);

        // Load PDFs from server response
        if (Array.isArray(lessonData.pdfFiles) && lessonData.pdfFiles.length > 0) {
            console.log('PDF Files:', lessonData.pdfFiles);
            lessonData.pdfFiles.forEach(pdf => {
                const pdfFileId = pdf.pdfFileId;
                const listItem = document.createElement('li');
                listItem.innerHTML = `
                    <div style="position: relative;">
                        <strong>${pdf.pdfFileName}</strong>
                        <button class="btn btn-link" onclick="openPdfModal('/admin/pdf/${pdfFileId}', '${pdfFileId}', '${userId}')">
                            Preview PDF
                        </button>
                        <span id="progress_${pdfFileId}">Loading progress...</span>
                        <div class="kebab-menu" onclick="togglePdfMenu('${pdfFileId}'); event.stopPropagation();" style="cursor: pointer;">
                            &#x22EE;
                        </div>
                        <div class="dropdown-menu" id="pdfMenu-${pdfFileId}" style="display: none; position: absolute; top: 20px; right: 0; z-index: 10; background: white; border: 1px solid #ddd; padding: 5px;">
                            <a href="#" onclick="archivePdf('${pdfFileId}'); return false;">Archive</a>
                        </div>
                    </div>
                `;
                pdfList.appendChild(listItem);

                // Fetch and display initial progress for each PDF
                fetch(`/admin/lesson/get-pdf-progress/${userId}/${pdfFileId}`)
                    .then(progressResponse => progressResponse.json())
                    .then(progressData => {
                        const progress = progressData.progress || 0;
                        document.getElementById(`progress_${pdfFileId}`).textContent = `Progress: ${progress}%`;
                    });
            });
        } else {
            pdfList.innerHTML = '<p>No PDFs uploaded for this lesson.</p>';
            console.log('No PDFs found');
        }

          // Verify Videos are populated correctly
          if (Array.isArray(lessonData.videoFiles) && lessonData.videoFiles.length > 0) {
            console.log('Videos found:', lessonData.videoFiles); // Debug log

            lessonData.videoFiles.forEach(video => {
                console.log('Rendering video:', video);

                const videoFileId = video.videoFileId;
                const videoFileName = video.videoFileName;
                const videoUrl = `/admin/video/${videoFileId}`;
                const listItem = document.createElement('li');
                listItem.innerHTML = `
                   <div style="position: relative;">
                        <a href="/admin/video/${videoFileId}" target="_blank">${videoFileName}</a>
                        <div class="kebab-menu" onclick="toggleVideoMenu('${videoFileId}'); event.stopPropagation();" style="cursor: pointer;">
                            &#x22EE;
                        </div>
                        <div class="dropdown-menu" id="videoMenu-${videoFileId}" style="display: none; position: absolute; top: 20px; right: 0; z-index: 10; background: white; border: 1px solid #ddd; padding: 5px;">
                            <a href="#" onclick="archiveVideo('${videoFileId}'); return false;">Archive</a>
                        </div>
                    </div>
                `;
                videoList.appendChild(listItem);
            });
        } else {
            videoList.innerHTML = '<p>No videos uploaded for this lesson.</p>';
            console.log('No videos found');
        }

    } catch (error) {
        console.error('Error loading lesson files:', error);
    }
}
             // Function to open the PDF modal and track progress by scrolling
             function openPdfModal(pdfUrl, pdfFileId, userId) {
                // Display the modal with the PDF content
                const pdfViewer = document.getElementById("pdfViewer");
                pdfViewer.src = pdfUrl;
                document.getElementById("pdfModal").style.display = "block";
    
                // Save initial progress as 100% upon opening if it’s not already full
                savePdfProgress(userId, pdfFileId, 100);
    
                // Track scroll progress within the modal
                pdfViewer.onload = function () {
                    const scrollHandler = () => {
                        const totalHeight = pdfViewer.contentDocument.documentElement.scrollHeight - pdfViewer.clientHeight;
                        const scrolled = pdfViewer.contentDocument.documentElement.scrollTop;
                        const progress = Math.min((scrolled / totalHeight) * 100, 100); // Cap at 100%
    
                        // Save and update display if scrolled to 100%
                        if (progress === 100) {
                            savePdfProgress(userId, pdfFileId, 100).then(() => {
                                pdfViewer.removeEventListener('scroll', scrollHandler);
                            });
                        }
                    };
    
                    // Attach the scroll event handler to track progress
                    pdfViewer.contentDocument.addEventListener('scroll', scrollHandler);
                };
            }
    
            // Function to close the PDF modal
            function closePdfModal() {
                document.getElementById("pdfModal").style.display = "none";
                document.getElementById("pdfViewer").src = ""; // Clear src to stop loading
            }

            // Function to send PDF progress to the server and update display in real-time
            function savePdfProgress(userId, pdfFileId, progress) {
                return fetch('/admin/lesson/pdf-progress', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ userId, pdfFileId, progress })
                })
                .then(response => response.ok ? response.json() : Promise.reject('Failed to save progress'))
                .then(data => {
                    if (data.success) {
                        // Update the progress display in the list immediately
                        const progressElement = document.getElementById(`progress_${pdfFileId}`);
                        if (progressElement) {
                            progressElement.textContent = `Progress: ${progress}%`;
                        }
                    }
                })
                .catch(error => console.error('Error saving progress:', error));
            }

        
            // Other functions remain unchanged (e.g., openPdfModal, closePdfModal, savePdfProgress)
        
             // Event listener for PDF upload form submission
             document.getElementById('uploadPdfForm').addEventListener('submit', async function(event) {
                event.preventDefault(); // Prevent default form submission

                const formData = new FormData(this);
                const roomId = document.getElementById('pdfRoomId').value;
                const userId = '<%= currentUser._id %>'; // User ID for progress tracking

                try {
                    // Upload the PDF via AJAX
                    const response = await fetch(`/admin/upload-pdf/${roomId}`, {
                        method: 'POST',
                        body: formData
                    });

                    if (response.ok) {
                        alert('PDF uploaded successfully!');
                        
                        // Reload the list of PDFs and Videos to reflect the new upload
                        loadLessonFiles(roomId, userId); 
                    } else {
                        throw new Error('Error uploading PDF');
                    }
                } catch (error) {
                    console.error('Error uploading PDF:', error);
                    alert('Error uploading PDF.');
                }
            });
        
            // Event listener for Video upload form submission
            document.getElementById('uploadVideoForm').addEventListener('submit', async function(event) {
                event.preventDefault();
                const formData = new FormData(this);
                const roomId = document.getElementById('videoRoomId').value;
                 const userId = '<%= currentUser._id %>'; // For dynamic reloading

                try {
                    const response = await fetch(`/admin/upload-video/${roomId}`, { method: 'POST', body: formData });
                    if (response.ok) {
                        alert('Video uploaded successfully!');
                        loadLessonFiles(roomId, userId);
                    } else throw new Error('Error uploading video');
                } catch (error) {
                    console.error('Error uploading video:', error);
                    alert('Error uploading video.');
                }
            });
        
        </script>

        <script>
            // Event listener to handle room clicks and load PDFs and Videos for the room
            document.addEventListener('DOMContentLoaded', function () {
                document.querySelectorAll('.clickable').forEach(function (roomElement) {
                    roomElement.addEventListener('click', function () {
                        const roomId = this.getAttribute('data-room-id');
                        const userId = '<%= currentUser._id %>';

                        document.getElementById('lessonRoomContent').style.display = 'block';
                        loadLessonFiles(roomId, userId);

                        // Update form actions and hidden input values with the room ID
                        document.getElementById('uploadPdfForm').action = `/admin/upload-pdf/${roomId}`;
                        document.getElementById('uploadVideoForm').action = `/admin/upload-video/${roomId}`;
                        document.getElementById('pdfRoomId').value = roomId;
                        document.getElementById('videoRoomId').value = roomId;
                    });
                });
            });

            function toggleDropdownMenu() {
        const menu = document.getElementById("dropdownMenu");
        menu.style.display = menu.style.display === "block" ? "none" : "block";
    }

    // Close dropdown when clicking outside
    document.addEventListener("click", function(event) {
        const menu = document.getElementById("dropdownMenu");
        const trigger = document.querySelector(".settings-icon");

        if (!menu.contains(event.target) && event.target !== trigger) {
            menu.style.display = "none";
        }
    });

     // Function to toggle the kebab menu dropdown display
     function toggleMenu(roomId) {
        const menu = document.getElementById(`menu-${roomId}`);
        menu.style.display = menu.style.display === 'block' ? 'none' : 'block';
    }

    
     // Archive function to send an AJAX request for archiving a lesson room
    function archiveLessonRoom(lessonRoomId) {
        fetch(`/admin/archive-lesson-room/${lessonRoomId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => {
            if (response.ok) {
                alert('Lesson room archived successfully.');
                location.reload(); // Reload to refresh the lesson room list
            } else {
                alert('Failed to archive lesson room.');
            }
        })
        .catch(error => {
            console.error('Error archiving lesson room:', error);
        });
    }

    // Close dropdowns if clicked outside
    document.addEventListener('click', function(event) {

        const dropdowns = document.querySelectorAll('.dropdown-menu');
        dropdowns.forEach(menu => {
            if (!menu.contains(event.target) && menu.style.display === 'block') {
                menu.style.display = 'none';
            }
        });
    });
        </script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const lessonRoomItems = document.querySelectorAll('.list-group-item');
        const layeredContainer = document.querySelector('.layered-container'); // Create lesson room section
        const newBigBox = document.querySelector('.newbigbox'); // Main container with buttons
        const uploadPdfSection = document.getElementById('uploadPdfSection'); // PDF upload section
        const uploadVideoSection = document.getElementById('uploadVideoSection'); // Video upload section
    
        lessonRoomItems.forEach(item => {
            item.addEventListener('click', function () {
                layeredContainer.style.display = 'none'; // Hide the create lesson room section
                newBigBox.style.display = 'block'; // Show main button container
                uploadPdfSection.style.display = 'none'; // Initially hide PDF section
                uploadVideoSection.style.display = 'none'; // Initially hide video section
    
                const roomId = item.getAttribute('data-room-id'); // Get room ID
                document.getElementById('pdfRoomId').value = roomId;
                document.getElementById('videoRoomId').value = roomId;
            });
        });
    
        // Show PDF section on Module button click
        document.getElementById('moduleButton').addEventListener('click', function () {
            newBigBox.style.display = 'none';
            uploadPdfSection.style.display = 'block';
            uploadVideoSection.style.display = 'none';
        });
    
        // Show Video section on Video button click
        document.getElementById('videoButton').addEventListener('click', function () {
            newBigBox.style.display = 'none';
            uploadPdfSection.style.display = 'none';
            uploadVideoSection.style.display = 'block';
        });
    });
    </script>

        <!-- Logo added outside the sidebar and positioned in the left corner -->
        <div class="container-fluid">
            <img src="/assets/logo.png" alt="Logo" class="img-fluid text-left mt-2" style="width: 80px;">
            <img src="/assets/mw.png" alt="MW" class="img-fluid text-right mt-4" style="width: 80px;">
        </div>
    </div>
</body>
</html>