<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('../partials/head'); %>
    <title>Response Frequencies</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        html,body {

            margin: 0;
            font-family: Arial, sans-serif;
            background-image: url('/assets/analytics.png');
            background-size: cover;
            background-position: center;
            height: 100%;

        }

        .layered-container {
    position: relative;
    max-width: 550px; /* Adjust the width as needed */
    height: auto; /* Set the height as needed */
    margin: auto; /* Center the container horizontally */
    overflow: hidden; /* Ensures any overflow is hidden */
    border-radius: 8px; /* Optional: add rounded corners */
}

.card-body {
    position: relative;
    padding: 20px; /* Add padding for the form */
    z-index: 1; /* Ensure content is above the background */
    color: black; /* Change text color for visibility */
    text-align: center; /* Center text content for smaller screens */
    background-color: transparent; /* Remove the default background color */
    overflow: hidden; /* Ensure the pseudo-element stays within the bounds */
}

.card-body::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: white; /* Background color */
    opacity: 0.5; /* Apply transparency only to the background */
    z-index: -1; /* Place the background behind the content */
}


        h1, h3 {
            font-size: 1.5rem;
            margin-bottom: 20px;
            color: black;
        }

        p {
            font-size: 1rem;
            color: black;
        }

        .btn {
            margin: 5px;
            padding: 10px 20px;
            font-size: 1rem;
        }

        canvas {
            max-width: 90%;
            height: auto;
            margin: 20px auto;
        }
    </style>
</head>
<body>
    <div class="layered-container">
    <div class="card-body">
        <div class="card-header">
            <h1>Frequency of Responses for <%= quiz.title %></h1>
        </div>
        <div class="form-group">
            <a href="/admin/overallSummary/<%= quiz._id %>" class="btn btn-secondary">Back to Overall Summary</a>
            <a href="/admin/responseFrequencies/<%= quiz._id %>/export" class="btn btn-success">Export Correct Responses</a>

            <% Object.keys(frequencyData).forEach((questionId, index) => { %>
                <div class="question-section">
                    <h3><%= frequencyData[questionId].questionText %></h3>
                    <p><strong>Total Answers:</strong> <%= frequencyData[questionId].total %></p>
                    <p><strong>Correct Answer:</strong> <%= frequencyData[questionId].correctAnswer %></p>
                    <p><strong>Answer Distribution:</strong></p>

                    <% if (frequencyData[questionId].total === 0) { %>
                        <p>No responses yet.</p>
                    <% } else { %>
                        <canvas id="chart-<%= index %>" width="300" height="300"></canvas>
                    <% } %>
                </div>
            <% }) %>
        </div>
    </div>
</div>

    <script>
        // Pass frequencyData from the server to the client as JSON
        const frequencyData = <%- JSON.stringify(frequencyData) %>;

        // Generate charts for each question
        Object.keys(frequencyData).forEach((questionId, index) => {
            const choices = Object.keys(frequencyData[questionId].choices);
            const labels = choices.map((choice, idx) => `${String.fromCharCode(65 + idx)}. ${choice}`); // A, B, C...

            const ctx = document.getElementById(`chart-${index}`).getContext('2d');
            new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: labels, // Use A. Berlin, B. Munich, etc.
                    datasets: [{
                        data: Object.values(frequencyData[questionId].choices), // Frequency values
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.6)',
                            'rgba(54, 162, 235, 0.6)',
                            'rgba(255, 206, 86, 0.6)',
                            'rgba(75, 192, 192, 0.6)',
                            'rgba(153, 102, 255, 0.6)',
                            'rgba(255, 159, 64, 0.6)'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                            labels: {
                                color: 'black', // Changed legend text color
                                font: {
                                    size: 14 // Optional: Adjust font size
                                }
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(tooltipItem) {
                                    const value = tooltipItem.raw;
                                    const total = frequencyData[questionId].total;
                                    const percentage = ((value / total) * 100).toFixed(1);
                                    return `${tooltipItem.label}: ${value} (${percentage}%)`;
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
</body>

</html>
