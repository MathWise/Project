<!-- views/admin/homeAdmin.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Home</title>
    <link rel="stylesheet" href="/homeAdmin.css">
</head>
<body>

    <!-- Dropdown Button for navigation -->
    <div class="dropdown">
        <button class="dropbtn">Menu</button>
        <div class="dropdown-content">
            <a href="/admin/manage-access"  onclick="showLoadingOverlay()">Manage Access</a>
            <a href="/admin/Archive"  onclick="showLoadingOverlay()">Archive</a>
            <a href="/logout"  onclick="showLoadingOverlay()">Logout</a>
        </div>
    </div>
 

    <div class="container">
      
        <h1>Rooms</h1>
        <% if (successMessage.length > 0) { %>
            <div class="alert alert-success">
                <%= successMessage[0] %>
            </div>
        <% } %>
        <% if (errorMessage.length > 0) { %>
            <div class="alert alert-danger">
                <%= errorMessage[0] %>
            </div>
        <% } %>
        <button class="room-button" id="openCreateRoomModal">Create Room</button>
        
              <!-- Search Bar -->
    <form action="/admin/homeAdmin" method="GET" style="margin-bottom: 20px;">
        <label for="search-input" style="margin-right: 10px;">Search Rooms:</label>
        <input 
            type="text" 
            id="search-input" 
            name="search" 
            placeholder="Search by room name or teacher" 
            value="<%= searchQuery || '' %>" 
            style="padding: 5px; width: 300px; margin-right: 10px;"
        >
        <button type="submit" class="btn btn-primary">Search</button>
    </form>

        <!-- Loading Animation Overlay -->
        <div id="loadingOverlay" style="display: none;">
            <div class="spinner"></div>
        </div>

        <!-- Rooms grid display -->
        <div class="room-grid">
            <% if (rooms.length === 0) { %>
                <p>Room not found.</p>
            <% } else { %>
            <% rooms.forEach(function(room) { %>
                <div class="room" onclick="promptPassword('<%= room.roomPassword %>', '<%= room._id %>')">
                    <p><%= room.name %></p>
                    <p>Grade: <%= room.gradeLevel %></p>
                    <p>Teacher: <%= room.teacherName %></p>

                    <!-- Kebab Menu Icon -->
                    <div class="kebab-menu" onclick="event.stopPropagation(); toggleMenu('<%= room._id %>');">
                        &#x22EE; <!-- Vertical ellipsis symbol for kebab menu -->
                    </div>

                    <!-- Dropdown Menu for each room -->
                    <div class="dropdown-menu" id="menu-<%= room._id %>" style="display: none;">
                        <a href="#" onclick="archiveRoom('<%= room._id %>'); event.stopPropagation();">Archive</a>
                        <a href="#" onclick="forgotPassword('<%= room._id %>', '<%= room.email %>'); event.stopPropagation();">Forgot Password</a>
                    </div>
                </div>
            <% }) %>
            <% } %>
        </div>

            <!-- Notification Modal -->
            <div id="notificationModal" style="display: none;">
                <div class="modal-content">
                    <h3 id="notificationTitle">Notification</h3>
                    <p id="notificationMessage"></p>
                    <button onclick="closeNotificationModal()">Close</button>
                </div>
            </div>

        <!-- Add a modal to your HTML -->
        <div id="passwordModal" style="display: none;">
            <div class="modal-content">
                <label for="roomPassword">Enter the room password:</label>
                <input type="password" id="roomPassword" onkeydown="checkEnterKey(event)" />
                <button  onclick="submitPassword()">Submit</button>
                <button onclick="closeModal()">Cancel</button>
            </div>
        </div>

        <div id="passwordModal1" style="display: none;">
            <div class="modal-content1">
                <label for="roomPassword1">Enter the room password to archive:</label>
                <input type="password" id="roomPassword1" onkeydown="checkEnterKey1(event)" />
                <button onclick="submitPassword1() ">Submit</button>
                <button onclick="closeModal1()">Cancel</button>
            </div>
        </div>
        

        <!-- Button to show Create Room form -->
        <br>
   

      <!-- Modal Structure -->
        <div id="createRoomModal" class="modal">
            <div class="modal-content">
                <span class="close" id="closeCreateRoomModal">&times;</span>
                <h2>Create Room</h2>
                <form action="/admin/homeAdmin" method="POST">
                    <input type="text" name="name" placeholder="Room Name" required>
                    <input type="text" name="gradeLevel" placeholder="Grade Level" required>
                    <input type="email" name="email" placeholder="Email for Password Recovery" required>
                    <input type="text" name="teacherName" placeholder="Teacher Name" required>
                    <input type="password" name="roomPassword" placeholder="Room Password" required>
                    <button type="submit">Create Room</button>
                </form>
            </div>
        </div>

    </div>

    <script>
     // Global variables to store the context for the modal
let modalAction = null;
let roomIdForModal = null;
let correctPasswordForModal = null;

// Function to open the modal for archiving a room
function archiveRoom(roomId) {
    modalAction = 'archive';
    roomIdForModal = roomId;

    // Update the modal message
    document.getElementById('passwordModal1').style.display = 'flex';

    // Focus on the password input
    document.getElementById('roomPassword1').focus();
}

// Function to open the modal for entering a room
function promptPassword(correctPassword, roomId) {
    modalAction = 'enter';
    roomIdForModal = roomId;
    correctPasswordForModal = correctPassword;

    // Update the modal message
    document.getElementById('passwordModal1').style.display = 'flex';

    // Focus on the password input
    document.getElementById('roomPassword1').focus();
}

// Function to submit the password from the modal
function submitPassword1() {
    const userPassword = document.getElementById('roomPassword1').value;

    document.getElementById('loadingOverlay').style.display = 'flex';


    if (modalAction === 'archive') {
        // Handle archive functionality
        if (userPassword) {
            // Create a form to submit the room ID and password to the server
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = `/admin/archive-room/${roomIdForModal}`;

            // Add the password as a hidden input
            const passwordInput = document.createElement('input');
            passwordInput.type = 'hidden';
            passwordInput.name = 'roomPassword';
            passwordInput.value = userPassword;
            form.appendChild(passwordInput);

            document.body.appendChild(form);
            form.submit();
        } else {
            alert('Password is required to archive the room.');
        }
    } else if (modalAction === 'enter') {
        // Handle entering a room
        if (userPassword === correctPasswordForModal) {
            // Redirect to the room's dashboard
            window.location.href = `/admin/dashboard/${roomIdForModal}`;
        } else {
            alert('Incorrect password. Please try again.');
        }
    }

    // Close the modal
    closeModal1();
}

// Function to close the modal
function closeModal1() {
    document.getElementById('passwordModal1').style.display = 'none';
    document.getElementById('roomPassword1').value = ''; // Clear the input field

    // Reset modal variables
    modalAction = null;
    roomIdForModal = null;
    correctPasswordForModal = null;
}

// Handle Enter key submission
function checkEnterKey1(event) {
    if (event.key === 'Enter') {
        submitPassword1();
    }
}

        // Function to toggle the kebab menu dropdown display
        function toggleMenu(roomId) {
            const menu = document.getElementById(`menu-${roomId}`);
            menu.style.display = menu.style.display === 'none' || menu.style.display === '' ? 'block' : 'none';
        }
        
        // Function to toggle the display of the Create Room form
        document.getElementById("showCreateRoomBtn").addEventListener("click", function() {
            const form = document.getElementById("createRoomForm");
            // Toggle display of form between 'block' and 'none'
            form.style.display = (form.style.display === "block") ? "none" : "block";
        });

        // Close dropdown menus when clicking outside
        document.addEventListener('click', function(event) {
            const dropdowns = document.querySelectorAll('.dropdown-menu');
            dropdowns.forEach(menu => {
                menu.style.display = 'none';
            });
        });
        setTimeout(() => {
    const successAlert = document.getElementById("success-alert");
    const errorAlert = document.getElementById("error-alert");

    if (successAlert) {
        successAlert.style.transition = "opacity 0.5s ease";
        successAlert.style.opacity = "0";
        setTimeout(() => successAlert.remove(), 500);
    }

    if (errorAlert) {
        errorAlert.style.transition = "opacity 0.5s ease";
        errorAlert.style.opacity = "0";
        setTimeout(() => errorAlert.remove(), 500);
    }
}, 3000);

        console.log("Success Message:", "<%= successMessage %>");
        console.log("Error Message:", "<%= errorMessage %>");
    </script>

 <script>
    window.addEventListener("load", () => {
        if (!sessionStorage.getItem("loggedIn")) {
            sessionStorage.clear();
            window.location.href = "/login";  // Redirect to login if sessionStorage is cleared
        }
    });
</script>

<script>
    function promptPassword(correctPassword, roomId) {
        // Show the modal
        document.getElementById('passwordModal').style.display = 'flex';

        // Store the correct password and roomId in variables
        window.correctPassword = correctPassword;
        window.roomId = roomId;

        // Focus on the password input field
        document.getElementById('roomPassword').focus();
    }

    function submitPassword() {
        const userPassword = document.getElementById('roomPassword').value;

        document.getElementById('loadingOverlay').style.display = 'flex';

        if (userPassword === window.correctPassword) {
            // Store room access in the session via an AJAX request
            fetch(`/admin/grant-access/${window.roomId}`, { method: 'POST' })
                .then(response => {
                    if (response.ok) {
                        window.location.href = `/admin/dashboard/${window.roomId}`;
                    } else {
                        alert('Failed to grant access. Please try again.');
                    }
                })
                .catch(error => console.error('Error:', error));
        } else {
            alert('Incorrect password. Please try again.');
        }

        // Close the modal
        closeModal();
    }

    function closeModal() {
        document.getElementById('passwordModal').style.display = 'none';
        document.getElementById('roomPassword').value = ''; // Clear the password input
    }

    function checkEnterKey(event) {
        if (event.key === 'Enter') {
            submitPassword();
        }
    }
</script>


<script>
    const searchInput = document.getElementById('search-input');
    const searchForm = document.querySelector('form');

    // Automatically submit the form when the search input is cleared
    searchInput.addEventListener('input', () => {
        if (searchInput.value.trim() === '') {
            searchForm.submit(); // Automatically submit the form
        }
    });
</script>

<script>
    // Select the Create Room form
    const createRoomForm = document.getElementById("createRoomModal");

    // Attach a submit event listener
    createRoomForm.addEventListener("submit", function (event) {
        // Show the loading overlay
        document.getElementById("loadingOverlay").style.display = "flex";
    });


</script>

<script>
    // Get elements
    const openModalButton = document.getElementById('openCreateRoomModal');
    const closeModalButton = document.getElementById('closeCreateRoomModal');
    const modal = document.getElementById('createRoomModal');

    // Open modal
    openModalButton.addEventListener('click', () => {
        modal.style.display = 'flex';
    });

    // Close modal
    closeModalButton.addEventListener('click', () => {
        modal.style.display = 'none';
    });

    // Close modal when clicking outside the modal content
    window.addEventListener('click', (event) => {
        if (event.target === modal) {
            modal.style.display = 'none';
        }
    });
</script>
<script>
    function showLoadingOverlay() {
        const loadingOverlay = document.getElementById('loadingOverlay');
        loadingOverlay.style.display = 'flex';
    }
</script>

<script>
    // Function to handle "Forgot Password" click
    function forgotPassword(roomId, email) {
        const loadingOverlay = document.getElementById('loadingOverlay');
        const notificationModal = document.getElementById('notificationModal');
        const notificationTitle = document.getElementById('notificationTitle');
        const notificationMessage = document.getElementById('notificationMessage');

        loadingOverlay.style.display = 'flex'; // Show loading overlay

        fetch('/forgot-room-password', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ roomId, email }),
        })
            .then((response) => response.json())
            .then((data) => {
                loadingOverlay.style.display = 'none'; // Hide loading overlay
                notificationTitle.innerText = 'Success';
                notificationMessage.innerText = data.message || 'Password reset email sent.';
                notificationModal.style.display = 'flex'; // Show modal
            })
            .catch((error) => {
                console.error('Error processing password reset:', error);
                loadingOverlay.style.display = 'none'; // Hide loading overlay
                notificationTitle.innerText = 'Error';
                notificationMessage.innerText = 'An error occurred while sending the password reset email.';
                notificationModal.style.display = 'flex'; // Show modal
            });
    }

    // Function to close the notification modal
    function closeNotificationModal() {
        const notificationModal = document.getElementById('notificationModal');
        notificationModal.style.display = 'none';
    }
</script>



    





    


</body>
</html>
