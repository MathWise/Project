<!-- views/admin/homeAdmin.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Home</title>
    <link rel="stylesheet" href="/homeAdmin.css">
</head>
<body>

    <!-- Dropdown Button for navigation -->
    <div class="dropdown">
        <button class="dropbtn">Menu</button>
        <div class="dropdown-content">
            <a href="/admin/manage-access">Manage Access</a>
            <a href="/admin/Archive">Archive</a>
            <a href="/logout">Logout</a>
        </div>
    </div>
 

    <div class="container">
      
        <h1>Rooms</h1>
        <% if (successMessage.length > 0) { %>
            <div class="alert alert-success">
                <%= successMessage[0] %>
            </div>
        <% } %>
        <% if (errorMessage.length > 0) { %>
            <div class="alert alert-danger">
                <%= errorMessage[0] %>
            </div>
        <% } %>
        
        
              <!-- Search Bar -->
    <form action="/admin/homeAdmin" method="GET" style="margin-bottom: 20px;">
        <label for="search-input" style="margin-right: 10px;">Search Rooms:</label>
        <input 
            type="text" 
            id="search-input" 
            name="search" 
            placeholder="Search by room name or teacher" 
            value="<%= searchQuery || '' %>" 
            style="padding: 5px; width: 300px; margin-right: 10px;"
        >
        <button type="submit" class="btn btn-primary">Search</button>
    </form>
    
        <!-- Loading Animation Overlay -->
        <div id="loadingOverlay" style="display: none;">
            <div class="spinner"></div>
        </div>

        <!-- Rooms grid display -->
        <div class="room-grid">
            <% if (rooms.length === 0) { %>
                <p>Room not found.</p>
            <% } else { %>
            <% rooms.forEach(function(room) { %>
                <div class="room" onclick="promptPassword('<%= room.roomPassword %>', '<%= room._id %>')">
                    <p><%= room.name %></p>
                    <p>Grade: <%= room.gradeLevel %></p>
                    <p>Teacher: <%= room.teacherName %></p>

                    <!-- Kebab Menu Icon -->
                    <div class="kebab-menu" onclick="event.stopPropagation(); toggleMenu('<%= room._id %>');">
                        &#x22EE; <!-- Vertical ellipsis symbol for kebab menu -->
                    </div>

                    <!-- Dropdown Menu for each room -->
                    <div class="dropdown-menu" id="menu-<%= room._id %>" style="display: none;">
                        <a href="#" onclick="archiveRoom('<%= room._id %>'); event.stopPropagation();">Archive</a>
                    </div>
                </div>
            <% }) %>
            <% } %>
        </div>

        <!-- Add a modal to your HTML -->
        <div id="passwordModal" style="display: none;">
            <div class="modal-content">
                <label for="roomPassword">Enter the room password:</label>
                <input type="password" id="roomPassword" onkeydown="checkEnterKey(event)" />
                <button onclick="submitPassword()">Submit</button>
                <button onclick="closeModal()">Cancel</button>
            </div>
        </div>

        <div id="passwordModal1" style="display: none;">
            <div class="modal-content1">
                <label for="roomPassword1">Enter the room password to archive:</label>
                <input type="password" id="roomPassword1" onkeydown="checkEnterKey1(event)" />
                <button onclick="submitPassword1()">Submit</button>
                <button onclick="closeModal1()">Cancel</button>
            </div>
        </div>
        

        <!-- Button to show Create Room form -->
        <br>
        <button class="room-button" id="showCreateRoomBtn">Create Room</button>

        <!-- Create Room form, hidden by default -->
        <div class="create-room-form" id="createRoomForm">
            <form action="/admin/homeAdmin" method="POST">
                <input type="text" name="name" placeholder="Room Name" required>
                <input type="text" name="gradeLevel" placeholder="Grade Level" required>
                <input type="text" name="teacherName" placeholder="Teacher Name" required>
                <input type="password" name="roomPassword" placeholder="Room Password" required>
                <button type="submit">Create Room</button>
            </form>
        </div>

    </div>

    <script>
     // Global variables to store the context for the modal
let modalAction = null;
let roomIdForModal = null;
let correctPasswordForModal = null;

// Function to open the modal for archiving a room
function archiveRoom(roomId) {
    modalAction = 'archive';
    roomIdForModal = roomId;

    // Update the modal message
    document.getElementById('passwordModal1').style.display = 'flex';

    // Focus on the password input
    document.getElementById('roomPassword1').focus();
}

// Function to open the modal for entering a room
function promptPassword(correctPassword, roomId) {
    modalAction = 'enter';
    roomIdForModal = roomId;
    correctPasswordForModal = correctPassword;

    // Update the modal message
    document.getElementById('passwordModal1').style.display = 'flex';

    // Focus on the password input
    document.getElementById('roomPassword1').focus();
}

// Function to submit the password from the modal
function submitPassword1() {
    const userPassword = document.getElementById('roomPassword1').value;

    if (modalAction === 'archive') {
        // Handle archive functionality
        if (userPassword) {
            // Create a form to submit the room ID and password to the server
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = `/admin/archive-room/${roomIdForModal}`;

            // Add the password as a hidden input
            const passwordInput = document.createElement('input');
            passwordInput.type = 'hidden';
            passwordInput.name = 'roomPassword';
            passwordInput.value = userPassword;
            form.appendChild(passwordInput);

            document.body.appendChild(form);
            form.submit();
        } else {
            alert('Password is required to archive the room.');
        }
    } else if (modalAction === 'enter') {
        // Handle entering a room
        if (userPassword === correctPasswordForModal) {
            // Redirect to the room's dashboard
            window.location.href = `/admin/dashboard/${roomIdForModal}`;
        } else {
            alert('Incorrect password. Please try again.');
        }
    }

    // Close the modal
    closeModal1();
}

// Function to close the modal
function closeModal1() {
    document.getElementById('passwordModal1').style.display = 'none';
    document.getElementById('roomPassword1').value = ''; // Clear the input field

    // Reset modal variables
    modalAction = null;
    roomIdForModal = null;
    correctPasswordForModal = null;
}

// Handle Enter key submission
function checkEnterKey1(event) {
    if (event.key === 'Enter') {
        submitPassword1();
    }
}

        // Function to toggle the kebab menu dropdown display
        function toggleMenu(roomId) {
            const menu = document.getElementById(`menu-${roomId}`);
            menu.style.display = menu.style.display === 'none' || menu.style.display === '' ? 'block' : 'none';
        }
        
        // Function to toggle the display of the Create Room form
        document.getElementById("showCreateRoomBtn").addEventListener("click", function() {
            const form = document.getElementById("createRoomForm");
            // Toggle display of form between 'block' and 'none'
            form.style.display = (form.style.display === "block") ? "none" : "block";
        });

        // Close dropdown menus when clicking outside
        document.addEventListener('click', function(event) {
            const dropdowns = document.querySelectorAll('.dropdown-menu');
            dropdowns.forEach(menu => {
                menu.style.display = 'none';
            });
        });
        setTimeout(() => {
    const successAlert = document.getElementById("success-alert");
    const errorAlert = document.getElementById("error-alert");

    if (successAlert) {
        successAlert.style.transition = "opacity 0.5s ease";
        successAlert.style.opacity = "0";
        setTimeout(() => successAlert.remove(), 500);
    }

    if (errorAlert) {
        errorAlert.style.transition = "opacity 0.5s ease";
        errorAlert.style.opacity = "0";
        setTimeout(() => errorAlert.remove(), 500);
    }
}, 3000);

        console.log("Success Message:", "<%= successMessage %>");
        console.log("Error Message:", "<%= errorMessage %>");
    </script>

 <script>
    window.addEventListener("load", () => {
        if (!sessionStorage.getItem("loggedIn")) {
            sessionStorage.clear();
            window.location.href = "/login";  // Redirect to login if sessionStorage is cleared
        }
    });
</script>

<script>
    function promptPassword(correctPassword, roomId) {
        // Show the modal
        document.getElementById('passwordModal').style.display = 'flex';

        // Store the correct password and roomId in variables
        window.correctPassword = correctPassword;
        window.roomId = roomId;

        // Focus on the password input field
        document.getElementById('roomPassword').focus();
    }

    function submitPassword() {
        const userPassword = document.getElementById('roomPassword').value;

        if (userPassword === window.correctPassword) {
            // Store room access in the session via an AJAX request
            fetch(`/admin/grant-access/${window.roomId}`, { method: 'POST' })
                .then(response => {
                    if (response.ok) {
                        window.location.href = `/admin/dashboard/${window.roomId}`;
                    } else {
                        alert('Failed to grant access. Please try again.');
                    }
                })
                .catch(error => console.error('Error:', error));
        } else {
            alert('Incorrect password. Please try again.');
        }

        // Close the modal
        closeModal();
    }

    function closeModal() {
        document.getElementById('passwordModal').style.display = 'none';
        document.getElementById('roomPassword').value = ''; // Clear the password input
    }

    function checkEnterKey(event) {
        if (event.key === 'Enter') {
            submitPassword();
        }
    }
</script>


<script>
    const searchInput = document.getElementById('search-input');
    const searchForm = document.querySelector('form');

    // Automatically submit the form when the search input is cleared
    searchInput.addEventListener('input', () => {
        if (searchInput.value.trim() === '') {
            searchForm.submit(); // Automatically submit the form
        }
    });
</script>

<script>
    // Select the Create Room form
    const createRoomForm = document.getElementById("createRoomForm");

    // Attach a submit event listener
    createRoomForm.addEventListener("submit", function (event) {
        // Show the loading overlay
        document.getElementById("loadingOverlay").style.display = "flex";
    });
</script>

    
    <style>
        .room {
            position: relative;
            padding: 10px;
            border: 1px solid #ccc;
            margin: 5px;
            border-radius: 5px;
        }
    
        .kebab-menu {
            font-size: 24px;
            cursor: pointer;
            position: absolute;
            top: 10px;
            right: 10px;
        }
    
        .dropdown-menu {
            position: absolute;
            top: 30px;
            right: 10px;
            background-color: white;
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 5px 0;
            width: 100px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
            z-index: 1000;
        }
    
        .dropdown-menu a {
            display: block;
            padding: 8px 10px;
            text-decoration: none;
            color: #333;
            font-size: 14px;
        }
    
        .dropdown-menu a:hover {
            background-color: #f0f0f0;
        }

        .alert-success {
            color: #155724;
            background-color: #d4edda;
            border-color: #c3e6cb;
            padding: 10px;
            margin: 10px 0;
            border-radius: 4px;
            opacity: 1; /* Ensure it's fully visible initially */
        }

        .alert-danger {
            color: #721c24;
            background-color: #f8d7da;
            border-color: #f5c6cb;
            padding: 10px;
            margin: 10px 0;
            border-radius: 4px;
            opacity: 1; /* Ensure it's fully visible initially */
        }

    </style>

<style>
    /* Modal background overlay */
    #passwordModal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent black */
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    /* Modal content box */
    .modal-content {
        background: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        text-align: center;
    }

    /* Button styles */
    .modal-content button {
        margin: 10px 5px;
        padding: 8px 16px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .modal-content button:hover {
        background-color: #f0f0f0;
    }

       /* Modal background overlay */
    #passwordModal1 {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent black */
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    /* Modal content box */
    .modal-content1 {
        background: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        text-align: center;
    }

    .alert-success {
    color: #155724;
    background-color: #d4edda;
    border-color: #c3e6cb;
    padding: 10px;
    margin: 10px 0;
    border-radius: 4px;
    opacity: 1; /* Ensure it's fully visible initially */
}

.alert-danger {
    color: #721c24;
    background-color: #f8d7da;
    border-color: #f5c6cb;
    padding: 10px;
    margin: 10px 0;
    border-radius: 4px;
    opacity: 1; /* Ensure it's fully visible initially */
}


 /* Loading overlay */
 #loadingOverlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent black */
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10000; /* Ensure it appears above everything else */
    }

    /* Spinner */
    .spinner {
        border: 8px solid #f3f3f3; /* Light gray */
        border-top: 8px solid #3498db; /* Blue */
        border-radius: 50%;
        width: 60px;
        height: 60px;
        animation: spin 1s linear infinite;
    }

    @keyframes spin {
        0% {
            transform: rotate(0deg);
        }
        100% {
            transform: rotate(360deg);
        }
    }

</style>


</body>
</html>
